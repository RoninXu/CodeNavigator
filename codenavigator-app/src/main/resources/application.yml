spring:
  profiles:
    active: dev
  
  application:
    name: codenavigator
  
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/code_navigator?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=GMT%2B8
    username: ${DB_USERNAME:root}
    password: ${DB_PASSWORD:}
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
    
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    database-platform: org.hibernate.dialect.MySQL8Dialect
    properties:
      hibernate:
        format_sql: true
        use_sql_comments: true
        
  data:
    redis:
      host: localhost
      port: 6379
      password: ${REDIS_PASSWORD:}
      timeout: 5000ms
      lettuce:
        pool:
          max-active: 20
          max-wait: -1ms
          max-idle: 5
          min-idle: 0
      
  thymeleaf:
    cache: false
    encoding: UTF-8
    mode: HTML
    prefix: classpath:/templates/
    suffix: .html

  # 应用程序生命周期配置 - 优雅关闭
  lifecycle:
    timeout-per-shutdown-phase: 30s  # 关闭超时时间

server:
  port: 8080
  servlet:
    context-path: /
    encoding:
      charset: UTF-8
      enabled: true
      force: true
  shutdown: graceful  # 优雅关闭，确保端口正确释放

# Management endpoints
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: when-authorized

# Swagger/OpenAPI 配置
springdoc:
  api-docs:
    path: /api-docs
    enabled: true
  swagger-ui:
    path: /swagger-ui.html
    enabled: true
    operationsSorter: method
    tagsSorter: alpha
    tryItOutEnabled: true
    filter: true
  show-actuator: true
  default-consumes-media-type: application/json
  default-produces-media-type: application/json

# AI模型配置
ai:
  default-provider: openai
  providers:
    openai:
      api-key: ${OPENAI_API_KEY:sk-197783824a45411fbbe712466fcf4234}
      base-url: https://api.openai.com/v1
      model-name: gpt-4
      temperature: 0.7
      max-tokens: 2000
      timeout: 60s
    deepseek:
      api-key: ${DEEPSEEK_API_KEY:}
      base-url: https://api.deepseek.com/v1
      model-name: deepseek-chat
      temperature: 0.7
      max-tokens: 2000
      timeout: 60s

# LangChain4j配置 (保持兼容性)
langchain4j:
  open-ai:
    chat-model:
      api-key: ${OPENAI_API_KEY:sk-197783824a45411fbbe712466fcf4234}
      model-name: gpt-4
      temperature: 0.7
      max-tokens: 2000
      timeout: 60s

# 应用业务配置
codenavigator:
  ai:
    conversation-timeout: 30000
    max-conversation-turns: 20
    enable-token-usage-tracking: true
  learning:
    max-concurrent-paths: 5
    session-timeout: 3600
    auto-save-interval: 300
  file:
    upload-path: ${user.home}/codenavigator/uploads
    max-file-size: 10MB
    allowed-extensions: java,py,js,ts,go,cpp,c,h

# 日志配置
logging:
  level:
    com.codenavigator: DEBUG
    org.springframework.web: INFO
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: ${user.home}/codenavigator/logs/application.log